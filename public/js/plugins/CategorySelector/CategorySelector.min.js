!function (a) { function d(a, b) { var e, c = a.length, d = null; for (e = 0; c > e; e++) if (d = a[e], b(d, e) === !0) return d } function f(a) { function k() { function k(a, b) { d(b, function (b) { var d, c = new TkellMenu.Item; c.prop("value", b.id).prop("text", b.text).prop("open", !0, !1), a.add(c, !1), d = b.children, d && d.length && k(c, d) }) } return j.html("请选择类目"), i.click(function () { return g.hasClass("open") ? g.removeClass("open") : (g.addClass("open"), setTimeout(function () { $("body").one("click", function () { g.removeClass("open") }) }, 1), void 0) }), f = new TkellMenu(h, e), k(f, a.data), f.render(), f.on("select", function (a) { a.select() && (f.data("select", a), j.html(a.prop("text"))) }), g.data(c.category, b), b } var f, b = this, g = $("#" + a.clientId), h = g.children(".dropMenu"), i = g.children(".valueContent"), j = i.children(".text"); return b.getSelectedCid = function () { var a = f.data("select"); return a ? a.prop("value") : null }, k() } var c, e; if (!a) throw "菜单未加载"; window.CategoryMenu || (c = { category: "category" }, $.prototype.category = function () { return this.data(c.category) }, window.console = window.console || function () { }, e = { data: [], autoRender: !1, isAutoSelectParent: !1, isAutoSelectFirstChild: !1, isSingleSelectMode: !0, isSelectOnly: !0, menuOpenEvent: "", menuCloseEvent: "", textTag: "a" }, f.menus = [], f.initMenu = function (a) { var b = new f(a); f.menus.push(b) }, window.CategoryMenu = f) } (TkellMenu);